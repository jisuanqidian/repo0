class string_utils;
    static function int split(string strin, byte separator, ref string strout[$], input int times = -1);
        int index[$];
        int split_cnt = 0;

        index.push_front(0);

        if(times != 0） begin
            foreach(strin[i]) begin
                if(strin[i] == separator) begin
                    split_cnt++;
                    index.push_back(i-1);
                    index.push_back(i+1);
                    if(times > 0 && times <= split_cnt) begin
                        break;
                    end
                end
            end
        end

        index.push_back(strin.len()-1);

        for(int i=0;i<index.size()/2;i++) begin
            strout.push_back(strin.substr(index[2*1], index[2*i+1]));
        end

        return strout.size();
    endfunction : split

    static function string link(string strin[$], string separator);
        string strout = "";
        int size = strin.size();

        for(int i=0;i<size;i++) begin
            strout = (i == 0) ? strin[0] : {strout, separator, strin[i]};
        end

        return strout;
    endfunction : link

    static function bit check_string_contains(string strin1, string strin2);
        bit found;

        for(int i=0;i<strin1.len()-strin2.len();i++) begin
            found = 1;
            for(int j=0;j<strin2.len();j++) begin
                if(strin1[i+j] != strin2[j]) begin
                    found = 0;
                    break;
                end
            end
            if(found) begin
                return 1;
            end
        end
        return 0;
    endfunction : check_string_contains

endclass : string_utils

import "DPI-C" function string getenv(string name);
import "DPI-C" function int access(string fname, int amode);

class file_utils;
    static function bit is_exists(string fname);
        return access(fname, 0） == 0；
    endfunctin
    static function bit is_writable(string fname);
        return access(fname, 2) == 0;
    endfunction
    static function bit is_readable(string fname);
        return access(fname, 4) == 0;
    endfunction
endclass

