vlogan -full64 -sverilog -kdb -lca +vcs+lic+wait -ntb_opts uvm-ieee +define+UVM_NO_DEPRECATED +define+UVM_PACKER_MAX_BYTES=150000 +define+DESIGNWARE_INCDIR=$DESIGNWARE_HOME +define+SVT_UVM_TECHNOLOGY +define+SYNOPSYS_SV +define+SVT_MIPI_RFFE +define+SVT_SPI +define+SVT_SPI_DATA_WIDTH=8 +define+SVT_SPI_IO_WIDTH=1 +define+SVT_SPI_MAX_DATA_TRANSFER=256 +define+SVT_UVM_1800_2_2017_OR_HIGHER +define+ARM_DISABLE_EMA_CHECK +define+EMPTY_TPU -l uvm.log && \
vlogan -full64 -sverilog -kdb -lca +vcs+lic+wait -ntb_opts uvm-ieee -timescale=1ns/1ps -unit_timescale=1ns/1ps +define+UVM_NO_DEPRECATED +define+UVM_PACKER_MAX_BYTES=150000 +define+DESIGNWARE_INCDIR=$DESIGNWARE_HOME +systemverilogext+.sv+.svi+.svh+.v +libext+.v +vcs+loopreport+10000 +define+SVT_UVM_TECHNOLOGY +define+SYNOPSYS_SV +define+SVT_MIPI_RFFE +define+SVT_SPI +define+SVT_SPI_DATA_WIDTH=8 +define+SVT_SPI_IO_WIDTH=1 +define+SVT_SPI_MAX_DATA_TRANSFER=256 +define+SVT_UVM_1800_2_2017_OR_HIGHER +nospecify +define+ARM_DISABLE_EMA_CHECK -f $HW/bfms/uvm/filelist-lite.f -f $WORKPATH/verify/filelist.f -f /project/sdr/user/liqiaochu/sdr_v1/database/soc/hw/ips/digital/bb_ctrl/v2/sims/inc/verilog.f +define+EMPTY_TPU -xprop -l vlog.log && \
vcs -full64 -sverilog -kdb -lca +vcs+lic+wait +warn=noLINX_KRNL -LDFLAGS -Wl,--no-as-needed -ntb_opts uvm-ieee -debug_access+all+fsdb -debug_region+cell+encrypt -xlrm floating_pnt_constraint -kdb +vcs+loopreport+10000 -top testbench -l elab.log
/project/sdr/user/liqiaochu/sdr_v1/database/soc/hw/ips/digital/bb_ctrl/v2/sims/tb/bb_ctrl_builds/main_ctrl_build/simv +vcs+lic+wait +fsdb+force +UVM_MAX_QUIT_COUNT=10 +UVM_VERBOSITY=UVM_LOW +ntb_random_seed=7962 -access +rw -notimingchecks -nospecify +define+ARM_DISABLE_EMA_CHECK +init_seq_type=bb_ctrl_demo_seq +EMPTY_TPU +force+fsdb -ucli -i $WORKPATH/verify/tcl/run.tcl +UVM_TESTNAME=mc_en_0001 +test_pls_e=tx_off_2 +boundary +test_mode=1 -l run.log $*
#!/bin/sh

echo "Run verdi start"

SIM_DIR=`pwd`

if [ $SIM_TOOL = "VCSM" ]; then

    echo "Open verdi now"

    bsub -I verdi -ssf novas.fsdb &

else
    if [ ! -d "vericom_lib.lib++" ]; then
        echo "Gen vericom_lib, if there is error, check your verdi.f"
        `rm -rf $SIM_DIR/verdi.f`
        `rm -rf $SIM_DIR/verdiLog/`
        `rm -rf $SIM_DIR/vericom_lib.lib++/`
        `rm -rf $SIM_DIR/vericomLog/`

        `cp $WORKPATH/verify/verdi.f $SIM_DIR`

        bsub -I vericom -lib vericom_lib -sv -ssv -ssy -ssz -syntaxerrormax 10000 +define+NOVAS_COMP -f verdi.f
    fi

    echo "Open verdi now"

    bsub -I verdi -lib vericom_lib -top testbench -ssf novas.fsdb &
fi
